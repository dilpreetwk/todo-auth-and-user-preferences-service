on:
  push:
    branches:
      - master

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          tag_prefix: "v"
          custom_release_rules: |
            "fix:patch:Bug Fixes,hotfix:patch:Bug Fixes,feature:minor:Features,change:minor:Changes,breaking:major:Breaking Changes,major:major:Major Changes"

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Tests
        run: mvn test

  build-release:
    runs-on: ubuntu-latest
    needs: [unit-tests, set-version]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build JAR with Version
        run: |
          VERSION=${{ needs.set-version.outputs.version }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          mvn versions:set -DnewVersion=$VERSION
          mvn clean package -DskipTests

      - name: Upload Artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.set-version.outputs.version }}
          name: Release ${{ needs.set-version.outputs.version }}
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-publish:
    runs-on: ubuntu-latest
    needs: [unit-tests, set-version]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          VERSION=${{ needs.set-version.outputs.version }}
          IMAGE_NAME=dilpreetwk/todo-auth-and-user-preferences-service
          docker build -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:$VERSION
